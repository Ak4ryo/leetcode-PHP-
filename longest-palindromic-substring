class Solution {

    /**
     * @param String $s
     * @return String
     */
    function longestPalindrome($s) {
        $start = 0;
        $end = 0;
        $length = strlen($s);

        for ($i = 0; $i < $length; $i++) {
            // Expand around single character center (odd length palindrome)
            $len1 = $this->expandAroundCenter($s, $i, $i);
            // Expand around two character center (even length palindrome)
            $len2 = $this->expandAroundCenter($s, $i, $i + 1);
            // Get the maximum length palindrome found
            $maxLen = max($len1, $len2);

            if ($maxLen > $end - $start) {
                $start = $i - (int)(($maxLen - 1) / 2);
                $end = $i + (int)($maxLen / 2);
            }
        }

        return substr($s, $start, $end - $start + 1);
    }

    private function expandAroundCenter($s, $left, $right) {
        $L = $left;
        $R = $right;
        $length = strlen($s);

        while ($L >= 0 && $R < $length && $s[$L] == $s[$R]) {
            $L--;
            $R++;
        }

        return $R - $L - 1; // Length of the palindrome
    }
}
